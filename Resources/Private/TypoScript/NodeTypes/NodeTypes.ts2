
##
# "YouTube" element
#
prototype(FreeVeggie.Blog:YouTube) < prototype(Content) {
    templatePath = 'resource://FreeVeggie.Blog/Private/Templates/NodeTypes/Youtube.html'
    attributes.class = 'responsive-video'
}

##
# "Quote" element
#
prototype(FreeVeggie.Blog:Quote) < prototype(Content) {
    attributes.class = 'fv-quote'
}

##
# Adjust "MultiColumnItem" element to Twitter bootstrap CSS classes
#
prototype(TYPO3.Neos.NodeTypes:MultiColumnItem) {
    attributes.class = ${'col-' + String.split(q(node).parent().property('layout'), '-')[multiColumnIteration.index]}
}

##
# Adjust "MultiColumn" element to Twitter bootstrap CSS classes
#
prototype(TYPO3.Neos.NodeTypes:MultiColumn) {
    attributes.class = 'row'
    columns.iterationName = 'multiColumnIteration'
}

##
# "BlogpostCollection" element
#
prototype(FreeVeggie.Blog:BlogpostCollection) < prototype(TYPO3.Neos:Content) {
    templatePath = 'resource://FreeVeggie.Blog/Private/Templates/NodeTypes/BlogpostCollection.html'
    blogposts = ${q(documentNode).children('[instanceof FreeVeggie.Blog:Blogpost]').get()}
    itemsPerPage = ${q(node).property('itemsPerPage') > 0 ? q(node).property('itemsPerPage') : 10}
    @cache {
        mode = 'uncached'
        context {
            1 = 'documentNode'
            2 = 'node'
        }
    }
}


##
# "BlogpostList" element, extending the default "Menu"
#
prototype(FreeVeggie.Blog:BlogpostList) < prototype(TYPO3.Neos:Content) {
    rootDocument = ${q(node).property('rootDocument')}
    blogposts = ${q(rootDocument) != null ? q(rootDocument).children('[instanceof FreeVeggie.Blog:Blogpost]').get() : null}
}



##
# "Page" element
#
prototype(TYPO3.Neos:PrimaryContent).page {
    condition = ${q(documentNode).is('[instanceof TYPO3.Neos.NodeTypes:Page]')}
    type = 'TYPO3.Neos.NodeTypes:Page'
}
prototype(TYPO3.Neos.NodeTypes:Page) < prototype(TYPO3.TypoScript:Template) {
    templatePath = 'resource://FreeVeggie.Blog/Private/Templates/NodeTypes/Page.html'
    title = ${q(node).property('title')}

    node = ${node}

    breadcrumb = Breadcrumb
    breadcrumb {
        templatePath = 'resource://FreeVeggie.Blog/Private/Templates/NodeTypes/Breadcrumb.html'
    }

    # Render the main ContentCollection of the Post like a page would
    main = TYPO3.Neos:ContentCollection {
        nodePath = 'main'
        @cache {
            mode = 'cached'
        }
    }
}


##
# "BlogPost" element
#
prototype(TYPO3.Neos:PrimaryContent).blogPost {
    condition = ${q(documentNode).is('[instanceof FreeVeggie.Blog:Blogpost]')}
    type = 'FreeVeggie.Blog:Blogpost'
}
prototype(FreeVeggie.Blog:Blogpost) < prototype(TYPO3.Neos.NodeTypes:Page) {
    teaser = ${q(node).property('teaser')}
}


##
# "Receipt" element
#
prototype(TYPO3.Neos:PrimaryContent).receipt {
    condition = ${q(documentNode).is('[instanceof FreeVeggie.Blog:Receipt]')}
    type = 'FreeVeggie.Blog:Receipt'
}
prototype(FreeVeggie.Blog:Receipt) < prototype(TYPO3.Neos.NodeTypes:Page) {

    headerImageUri = TYPO3.Neos:ImageUri {
        asset = ${q(node).property('headerImage')}
        maximumWidth = 2560
        maximumHeight = 1280
        @if.image = ${q(node).property('headerImage')}
    }
}

